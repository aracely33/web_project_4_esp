!function(){var t={240:function(t){function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function n(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}var r=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.options=e}var e,r;return e=t,(r=[{key:"getUserInfo",value:function(){return fetch("https://around.nomoreparties.co/v1/web_es_cohort_02/users/me",{headers:{authorization:"38be44b0-e909-4575-ba93-d677e497f17a"}}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"getInitialCards",value:function(){return fetch("https://around.nomoreparties.co/v1/web_es_cohort_02/cards",{headers:{authorization:"38be44b0-e909-4575-ba93-d677e497f17a"}}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"handleEditProfile",value:function(t){return fetch("https://around.nomoreparties.co/v1/web_es_cohort_02/users/me",{method:"PATCH",headers:{authorization:"38be44b0-e909-4575-ba93-d677e497f17a","Content-Type":"application/json"},body:JSON.stringify({name:"".concat(t.nombre),about:"".concat(t.ocupaciÃ³n)})}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"handleAddCard",value:function(t){return fetch("https://around.nomoreparties.co/v1/web_es_cohort_02/cards ",{method:"POST",headers:{authorization:"38be44b0-e909-4575-ba93-d677e497f17a","Content-Type":"application/json"},body:JSON.stringify({name:"".concat(t.title),link:"".concat(t.image)})}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"handleDeleteCard",value:function(t){return fetch("https://around.nomoreparties.co/v1/web_es_cohort_02/cards/".concat(t),{method:"DELETE",headers:{authorization:"38be44b0-e909-4575-ba93-d677e497f17a"}}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"handleLikeClick",value:function(t){return fetch("https://around.nomoreparties.co/v1/web_es_cohort_02/cards/likes/".concat(t),{method:"PUT",headers:{authorization:"38be44b0-e909-4575-ba93-d677e497f17a"}}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"handleUnLikeClick",value:function(t){return fetch("https://around.nomoreparties.co/v1/web_es_cohort_02/cards/likes/".concat(t),{method:"DELETE",headers:{authorization:"38be44b0-e909-4575-ba93-d677e497f17a"}}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"handleChangeAvatar",value:function(t){return fetch("https://around.nomoreparties.co/v1/web_es_cohort_02/users/me/avatar",{method:"PATCH",headers:{authorization:"38be44b0-e909-4575-ba93-d677e497f17a","Content-Type":"application/json"},body:JSON.stringify({avatar:"".concat(t.avatar)})}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}}])&&n(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();t.exports=r},383:function(t){function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function n(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}var r=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._config=e,this._formElement=n}var e,r;return e=t,(r=[{key:"_setEventListeners",value:function(t,e){var n=this;this._formElement=t,this._config=e;var r=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),o=t.querySelector(this._config.submitButtonSelector);this._toggleButtonState(r,o,this._config),this._formElement.addEventListener("reset",(function(){setTimeout((function(){n._toggleButtonState(r,o,n._config)}),0)})),r.forEach((function(t){t.addEventListener("input",(function(e){n._checkInputValidity(n._formElement,t),n._toggleButtonState(r,o,n._config)}))}))}},{key:"_disableButton",value:function(t,e){t.classList.add(e.inactiveButtonClass),t.setAttribute("disabled",!0)}},{key:"_ableButton",value:function(t,e){t.classList.remove(e.inactiveButtonClass),t.removeAttribute("disabled")}},{key:"_toggleButtonState",value:function(t,e,n){this._hasInvalidInput(t)?this._disableButton(e,n):this._ableButton(e,n)}},{key:"_checkInputValidity",value:function(t,e){e.validity.valid?this._hideInputError(t,e,this._config):this._showInputError(t,e,e.validationMessage,this._config)}},{key:"_showInputError",value:function(t,e,n,r){var o=t.querySelector(".".concat(e.id,"-error"));e.classList.add(r.inputErrorClass),o.textContent=n,o.classList.add(r.errorClass)}},{key:"_hideInputError",value:function(t,e,n){var r=t.querySelector(".".concat(e.id,"-error"));e.classList.remove(n.inputErrorClass),r.classList.remove(n.errorClass),r.textContent=""}},{key:"_hasInvalidInput",value:function(t){return t.some((function(t){return!t.validity.valid}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(t){t.preventDefault()})),this._setEventListeners(this._formElement,this._config)}}])&&n(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();t.exports=r},4:function(t){function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function n(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}var r=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=e,this._popupElement=document.querySelector(this._popup),this._handleCloseButton=this._handleCloseButton.bind(this),this._handleEscClose=this._handleEscClose.bind(this),this._handleTap=this._handleTap.bind(this)}var e,r;return e=t,(r=[{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),this.setEventListeners()}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("click",this._handleTap),document.removeEventListener("click",this._handleCloseButton)}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&(console.log("estas dentro del if de handleEscClose"),this._popupElement=document.querySelector(".popup_opened"),this.close())}},{key:"_handleTap",value:function(t){var e=t.target.classList.contains("popup");this._popupElement=t.target,e&&this.close()}},{key:"_handleCloseButton",value:function(t){var e=t.target.classList.contains("close-button");this._popupElement=document.querySelector(".popup_opened"),e&&this.close()}},{key:"setEventListeners",value:function(){document.addEventListener("keydown",this._handleEscClose),document.addEventListener("click",this._handleTap),document.addEventListener("click",this._handleCloseButton)}}])&&n(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();t.exports=r},1:function(t,e,n){function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==r(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===r(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=u(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},i.apply(this,arguments)}function u(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=s(t)););return t}function a(t,e){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},a(t,e)}function c(t,e){if(e&&("object"===r(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return l(t)}function l(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function s(t){return s=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},s(t)}var f=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&a(t,e)}(p,t);var e,n,r,u,f=(r=p,u=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=s(r);if(u){var n=s(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return c(this,t)});function p(t){var e,n=t.popupSelector,r=t.handleFormSubmit;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,p),(e=f.call(this,n))._formElement=e._popupElement.querySelector(".form"),e._handleFormSubmit=r,e._popupFormSubmit=e._popupFormSubmit.bind(l(e)),e}return e=p,(n=[{key:"_getInputValues",value:function(){var t=this;return this._inputList=this._formElement.querySelectorAll(".form__input"),this._formValues={},this._inputList.forEach((function(e){return t._formValues[e.name]=e.value})),this._formValues}},{key:"_popupFormSubmit",value:function(t){t.preventDefault(),t.target.querySelector(".form__Button").textContent="Guardando...",this._handleFormSubmit(this._getInputValues()),this._formElement.reset(),t.target.querySelector(".form__Button").textContent="Guardar",this.close()}},{key:"setEventListeners",value:function(){i(s(p.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",this._popupFormSubmit)}},{key:"close",value:function(){this._formElement.removeEventListener("submit",this._popupFormSubmit),i(s(p.prototype),"close",this).call(this)}}])&&o(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),p}(n(4));t.exports=f},584:function(t,e,n){function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function i(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==r(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===r(i)?i:String(i)),o)}var i}function u(){return u="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=a(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},u.apply(this,arguments)}function a(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=s(t)););return t}function c(t,e){return c=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},c(t,e)}function l(t,e){if(e&&("object"===r(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function s(t){return s=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},s(t)}var f=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&c(t,e)}(p,t);var e,n,r,a,f=(r=p,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=s(r);if(a){var n=s(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return l(this,t)});function p(){return o(this,p),f.apply(this,arguments)}return e=p,(n=[{key:"open",value:function(t){this._popupElement.querySelector(".popup__image").src=t.target.src;var e=this._popupElement.querySelector(".popup__imagedescription"),n=t.target.alt;e.textContent=n,u(s(p.prototype),"open",this).call(this)}}])&&i(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),p}(n(4));t.exports=f},411:function(t){function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function n(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}var r=function(){function t(e,n){var r=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=r,this._container=document.querySelector(n)}var e,r;return e=t,(r=[{key:"renderItems",value:function(){var t=this;this._renderedItems.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}},{key:"setItems",value:function(t){this._renderedItems=t}}])&&n(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();t.exports=r},840:function(t){function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function n(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}var r=function(){function t(e,n,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._userNameSelector=e,this._userJobSelector=n,this._userAvatarSelector=r,this._userNameContainer=document.querySelector(this._userNameSelector),this._userJobContainer=document.querySelector(this._userJobSelector),this._userAvatarContainer=document.querySelector(this._userAvatarSelector)}var e,r;return e=t,(r=[{key:"getUserInfo",value:function(){return{name:this._userNameContainer.textContent,job:this._userJobContainer.textContent,avatar:this._userAvatarContainer.style.backgroundImage}}},{key:"setUserInfo",value:function(t){this._userNameContainer.textContent=t.name,this._userJobContainer.textContent=t.about,this._userAvatarContainer.style.backgroundImage="url(".concat(t.avatar,")")}}])&&n(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();t.exports=r},177:function(t){function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function n(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}var r=function(){function t(e,n,r,o,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._data=e,this._title=e.title,this._image=e.url,this._selector=r,this._handleCardClick=n,this._handleTrashButton=o,this._handleLikeButtonClick=i}var e,r;return e=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._selector).content.cloneNode(!0)}},{key:"_addEventListeners",value:function(){this._element=this._getTemplate(),this._element.querySelector(".item__trash-button").addEventListener("click",this._handleTrashButton),this._element.querySelector(".item__place").addEventListener("click",this._handleCardClick),this._element.querySelector(".item__place-like-button").addEventListener("click",this._handleLikeButtonClick)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._addEventListeners(),this._element.querySelector(".item__likes-number").textContent=this._data.likes.length,this._element.querySelector(".item__place").src=this._image,this._element.querySelector(".item__place-info-name").textContent=this._title,this._element.querySelector(".item__place").alt=this._title,this._element}}])&&n(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();t.exports=r},575:function(t,e){e.addNewPlaceButton=document.querySelector(".profile__add-button"),e.profileEditButton=document.querySelector(".profile__info-edit-button"),e.avatarEditButton=document.querySelector(".profile__avatar-edit-button"),e.avatarImage=document.querySelector(".profile__avatar-container"),e.formButton=document.querySelector(".form__Button"),e.forms=document.querySelectorAll(".form"),e.placesSelector=".gallery",e.profileSelector=".profile__info"},209:function(t){t.exports=function(t){t.open()}}},e={};function n(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={exports:{}};return t[r](i,i.exports,n),i.exports}n.p="",function(){"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function r(t){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?e(Object(r),!0).forEach((function(e){o(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):e(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function o(e,n,r){return(n=function(e){var n=function(e,n){if("object"!==t(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===t(n)?n:String(n)}(n))in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}n.p;var i=n(575),u=n(411),a=n(177),c=n(209),l=n(383),s=n(584),f=n(1),p=n(840),y=new(n(240))({baseUrl:"https://around.nomoreparties.co/v1/web_es_cohort_02",headers:{authorization:"38be44b0-e909-4575-ba93-d677e497f17a","Content-Type":"application/json"}}),m=new p(".profile__info-name",".profile__info-occupation",".profile__avatar-container");function h(t){return new a(t,(function(t){new s(".popup_type-image").open(t)}),".template__place",(function(e){var n=new f({popupSelector:".popup_type-form-delete-card-ask",handleFormSubmit:function(){y.handleDeleteCard(t._id).then((function(t){e.target.parentElement.remove()}))}});c(n)}),(function(e){var n=e.target.classList.contains("item__place-like-button_active");e.target.classList.toggle("item__place-like-button_active"),n?y.handleUnLikeClick(t._id).then((function(t){e.target.parentElement.querySelector(".item__likes-number").textContent=t.likes.length})):y.handleLikeClick(t._id).then((function(t){e.target.parentElement.querySelector(".item__likes-number").textContent=t.likes.length}))}))}y.getUserInfo().then((function(t){m.setUserInfo(t)}));var b=new u({renderer:function(t){var e="006f3087a8e18511dd8656b8",n=t.likes.some((function(t){return t._id===e})),r=t.owner._id===e,o=h(t).generateCard(),i=o.querySelector(".item"),u=o.querySelector(".item__trash-button"),a=o.querySelector(".item__place-like-button");r||i.removeChild(u),b.addItem(o),n&&a.classList.add("item__place-like-button_active")}},i.placesSelector),d=(y.getInitialCards().then((function(t){var e=t.map((function(t){return r(r({},t),{},{title:t.name,url:t.link})}));b.setItems(e),b.renderItems()})),new f({popupSelector:".popup_type-form-new-profile",handleFormSubmit:function(t){y.handleEditProfile(t).then((function(t){y.getUserInfo().then((function(t){m.setUserInfo(t)}))}))}})),v=new f({popupSelector:".popup_type-form-new-place",handleFormSubmit:function(t){y.handleAddCard(t).then((function(t){var e=h(r(r({},t),{},{title:t.name,url:t.link})).generateCard();document.querySelector(i.placesSelector).prepend(e)}))}}),_=new f({popupSelector:".popup_type-form-change-profile-avatar",handleFormSubmit:function(t){y.handleChangeAvatar(t).then((function(e){i.avatarImage.style.backgroundImage="url(".concat(t.avatar,")")})).finally((function(){document.querySelector(".popup_type-form-change-profile-avatar").querySelector(".form__Button").textContent="Guardar"}))}});i.forms.forEach((function(t){new l({formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},t).enableValidation()})),i.profileEditButton.addEventListener("click",(function(){c(d)})),i.addNewPlaceButton.addEventListener("click",(function(){c(v)})),i.avatarEditButton.addEventListener("click",(function(){c(_)}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,